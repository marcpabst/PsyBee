# This file is autogenerated by maturin v1.5.1
# To update, run
#
#    maturin generate-ci github --manifest-path ./psybee-py/Cargo.toml
#
name: Build Python wheels

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths:
      - "psybee/**"
  pull_request:
    branches: [ "master" ]
    paths:
      - "psybee/**"

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.params.os }}
    runs-on: ${{ matrix.params.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        #        os: [ubuntu-22.04, windows-latest, macos-14]
        params: [{os: windows-latest, gst_version: 1.24.10}, {os: macos-14, gst_version: 1.24.10}]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: marcpabst/setup-gstreamer@v.1.5.3
        with:
          version: ${{ matrix.params.gst_version }}
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        with:
          package-dir: psybee
        env:
          GST_LIB_DIR_MACOS: "/Library/Frameworks/GStreamer.framework/"
          CIBW_ARCHS: "native"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: 'DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:$GST_LIB_DIR_MACOS"
          delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}'
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl