# This file is autogenerated by maturin v1.5.1
# To update, run
#
#    maturin generate-ci github --manifest-path ./psybee-py/Cargo.toml
#
name: Build Python wheels

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths:
      - "psybee/**"
  pull_request:
    branches: [ "master" ]
    paths:
      - "psybee/**"
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.params.os }}
    runs-on: ${{ matrix.params.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        #        os: [ubuntu-22.04, windows-latest, macos-14]
        params: [{os: windows-latest, gst_version: 1.24.10}, {os: macos-14, gst_version: 1.24.10}]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: marcpabst/setup-gstreamer@v.1.5.3
        with:
          version: ${{ matrix.params.gst_version }}
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        with:
          package-dir: psybee
        env:
          CIBW_ARCHS: "native"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:/Library/Frameworks/GStreamer.framework/Libraries" python -m delocate.cmd.delocate_wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} &&
            cd /Library/Frameworks/GStreamer.framework/Libraries &&
            for lib in *.dylib; do
              zip -u -n . {dest_dir}/*.whl .dylibs/$lib
            done &&
            unzip -vl {dest_dir}/*.whl
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  upload_all:
    needs: [build_wheels]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download wheels from build jobs
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1